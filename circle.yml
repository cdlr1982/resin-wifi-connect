---
version: 2

build: &build
  docker:
    - image: library/docker:17.06.0-ce
  working_directory: /tmp/build
  steps:
    - setup_remote_docker:
        version: 17.06.0-ce
        reusable: true
    - run:
        name: Test Docker
        command: docker info
    - checkout
    - run:
        name: Run build
        command: |
          set -x
          apk add --no-cache bash
          which bash
          pwd
          ls -lah
          ci/build.sh
    - run:
        name: Prepare for deploy
        command: |
          apk add --no-cache git
          TRAVIS_TAG=$(git describe --tags) || true

          mkdir -p $TRAVIS_TAG/dist
          sudo mv target/$TARGET/release/$BINARY $TRAVIS_TAG/dist/$BINARY
          cp -R public $TRAVIS_TAG/dist/public
          tar -czvf $TRAVIS_TAG/$BINARY-$TRAVIS_TAG-$BUILD_OS-$ARCH.tar.gz -C $TRAVIS_TAG/dist .
    - persist_to_workspace:
        root: workspace
        paths:
          - $TRAVIS_TAG/$BINARY-$TRAVIS_TAG-$BUILD_OS-$ARCH.tar.gz

jobs:
  aarch64:
    <<: *build
    environment:
      BINARY: resin-wifi-connect
      BUILD_OS: linux
      ARCH: aarch64
      TARGET: aarch64-unknown-linux-gnu
  armv7hf:
    <<: *build
    environment:
      BINARY: resin-wifi-connect
      BUILD_OS: linux
      ARCH: armv7hf
      TARGET: armv7-unknown-linux-gnueabihf
  rpi:
    <<: *build
    environment:
      BINARY: resin-wifi-connect
      BUILD_OS: linux
      ARCH: rpi
      TARGET: arm-unknown-linux-gnueabihf
  i386:
    <<: *build
    environment:
      BINARY: resin-wifi-connect
      BUILD_OS: linux
      ARCH: i386
      TARGET: i686-unknown-linux-gnu
  amd64:
    <<: *build
    environment:
      BINARY: resin-wifi-connect
      BUILD_OS: linux
      ARCH: amd64
      TARGET: x86_64-unknown-linux-gnu
  test:
    docker:
      - image: library/rust:1.20-jessie
    working_directory: /tmp/build
    steps:
      - setup_remote_docker:
          version: 17.06.0-ce
          reusable: true
      - checkout
      - run:
          name: Test
          command: |
            apt-get update
            apt-get install -y libdbus-1-dev libc6-dev

            rustc --version
            cargo test
  deploy:
    - attach_workspace:
        at: /tmp/workspace
    - run: ls -lah /tmp/workspace

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - aarch64:
          requires:
            - test
      - armv7hf:
          requires:
            - test
      - rpi:
          requires:
            - test
      - i386:
          requires:
            - test
      - amd64:
          requires:
            - test
      - deploy:
          requires:
            - aarch64
            - armv7hf
            - rpi
            - i386
            - amd64

